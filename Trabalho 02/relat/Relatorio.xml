<?xml version="1.0" encoding="UTF-8"?>
<relatório xmlns:xs="http://www.w3.org/2001/XMLSchema" id="relatorio">

    <páginaRosto>
        <tema>Seguradora de Barcos</tema>
        <disciplina>
            <designação>Linguagens e Programação</designação>
            <anoCurricular>2</anoCurricular>
            <sigla>LPROG</sigla>
        </disciplina>
        <autor>
            <nome>Diogo Capela</nome>
            <número>1171316</número>
            <mail>1171316@isep.ipp.pt</mail>
        </autor>
        <autor>
            <nome>Vítor Silva</nome>
            <número>1140825</número>
            <mail>1140825@isep.ipp.pt</mail>
        </autor>
        <autor>
            <nome>Teresa Alpendurada</nome>
            <número>1170523</número>
            <mail>1170523@isep.ipp.pt</mail>
        </autor>
        <turma>2NA</turma>
        <professor>Professor IAP</professor>
        <professor>Professor 2</professor>
        <professor>Professor 3</professor>
        <logotipoDEI>https://www.dei.isep.ipp.pt/images/topo_index.png</logotipoDEI>
        <data>2019-05-02</data>
    </páginaRosto>

    <corpo id="corpo">
        <introdução id="ANX111" tituloSecção="Introdução">
           
            <parágrafo> 
                        No âmbito da cadeira de Linguagens de Programação (LPROG) do 2º semestre
                        do 2º ano da Licenciatura em Engenharia Informática (LEI) foi entregue um 
                        enunciado cujo principal objectivo é utilizar tecnologias XML e seguir os
                        seguintes parâmetros:
            </parágrafo>
            <parágrafo>
                        ->    Definir uma representação XML para um domínio específico</parágrafo>
            <parágrafo>
                        ->    Definir a sintaxe dessa linguagem através do respetivo XML Schema (XSD)</parágrafo>
            <parágrafo>
                        ->    Criar instâncias (documentos XML) e validá-las de acordo com o XSD</parágrafo>
            <parágrafo>
                        ->    Fazer transformações ao documento XML (para XML e HTML) usando XSLT e XPath  </parágrafo>
            <parágrafo>      
            </parágrafo>
            <parágrafo>
                         O domínio especificado no enunciado é relativo a um Sistema de Gestão de Seguros
                        para o qual se pretende desenvolver e comercializar uma solução - InsureAgility - dirigida
                        às empresas seguradoras, que permita gerir as carteiras de seguros dos seus clientes.
                        A referida solução deve permitir às seguradoras:
            </parágrafo>
            <parágrafo>
                        ->  Obter os produtos (tipos de seguros) contratados por um cliente;</parágrafo>
            <parágrafo>
                        ->  Obter informação detalhada (coberturas, valor do prémio, vigência, …) de 
                            um produto contratado por um dado cliente;</parágrafo>
            <parágrafo>
                        ->  Sugerir alteração (agravamento/atenuação) do prémio (custo anual) do 
                            seguro em função do número e do tipo de participações (casos) ocorridos
                            no ano anterior;</parágrafo>
            <parágrafo>
                        ->  Obter um resumo de todos os produtos contratados (apólices) cujo prazo de 
                            vigência termina num dado mês de um dado ano;</parágrafo>
            <parágrafo>
            </parágrafo>
           
           
        </introdução>
        <outrasSecções>
            <análise id="ANX222" tituloSecção="Análise">
                 <parágrafo>
                            Para dar resposta a este enunciado o domínio escolhido, dentro da área de gestão de
                            seguros, foi um Sistema de Gestão de Seguros de Barcos. Cada barco pode ter várias 
                            coberturas e clientes podem ter vários barcos.
                </parágrafo>
                <parágrafo> 
                            Ao longo deste documento iremos analisar a abordagem levada a cabo pelo grupo e as 
                            soluções encontradas para responder da melhor forma a todos os requisitos lançados.
                </parágrafo>
                <parágrafo> 
                            O domínio escolhido pelo grupo foi um Sistema de Gestão de Seguros de Barcos. Neste 
                            sistema incluiram-se:
                </parágrafo>
                <parágrafo>
                            ->  Carteirasde Seguros</parágrafo>
            <parágrafo>
                            ->  Seguros</parágrafo>
            <parágrafo>
                            ->  Ocorrencias</parágrafo>
            <parágrafo>
                            ->  Clientes</parágrafo>
            <parágrafo>
                            ->  Barcos</parágrafo>
            <parágrafo>
                            ->  Marinas</parágrafo>
            <parágrafo>
                </parágrafo>                   
                <parágrafo> Neste trabalho começou-se por criar um ficheiro XML que contém a base de dados.</parágrafo>
                <parágrafo> 
                            São definidos uma série de barcos com elementos e atributos definidos, como por exemplo:</parágrafo>
            <parágrafo>
                                ->  id, modelo, a lotação, ano de fabrico, preço, entre outros.
                </parágrafo>
                <parágrafo></parágrafo>
            <parágrafo>
                            Contém também uma série de marinas onde os mesmos barcos estão atracados. Esta parte é 
                            importante para ser entendido da parte da seguradora que tipo de riscos tem que considerar.
                </parágrafo>
                <parágrafo>  Por fim uma série de clientes com os respetivos dados.</parágrafo>
                   
            </análise>
            <linguagem id="ANX333" tituloSecção="Linguagem">
                 <parágrafo>
                             O XML foi linguagem utilizada no desenvolvimento deste trabalho.
                            XML (Extensible Markup Language) é uma recomendação da W3C para gerar linguagens de marcação
                            para necessidades especiais. É um dos subtipos da SGML (acrônimo de Standard Generalized Markup
                            Language ou Linguagem Padronizada de Marcação Genérica) capaz de descrever diversos tipos de dados.
                            Uma das principais vantagens de utilizar esta linguagem é a facilidade de compartilhamento de
                            informações através da internet.[1] 
                </parágrafo>
                <parágrafo>
                            Em meados da década de 1990, o World Wide Web Consortium (W3C) começou a trabalhar em uma linguagem
                            de marcação que combinasse a flexibilidade da SGML com a simplicidade da HTML. O principal objectivo
                            era criar uma linguagem que pudesse ser lida por software, e integrar-se com as demais linguagens.    
                </parágrafo>
                <parágrafo> Características da linguagem:</parágrafo>
                <parágrafo> 
                            ->  Separação do conteúdo da formatação</parágrafo>
            <parágrafo>
                            ->  Simplicidade e legibilidade, tanto para humanos quanto para computadores</parágrafo>
            <parágrafo>
                            ->  Possibilidade de criação de tags sem limitação</parágrafo>
            <parágrafo>
                            ->  Criação de arquivos para validação de estrutura (chamados DTDs)</parágrafo>
            <parágrafo>
                            ->  Interligação de bancos de dados distintos</parágrafo>
            <parágrafo>
                            ->  Concentração na estrutura da informação, e não na sua aparência</parágrafo>
            <parágrafo>
                </parágrafo>
                <parágrafo>
                             O XML é um formato para a criação de documentos com dados organizados de forma hierárquica, como
                            se vê, frequentemente, em documentos de texto formatados, imagens vetoriais ou bancos de dados.
                            Pela sua portabilidade, já que é um formato que não depende das plataformas de hardware ou de
                            software, um banco de dados pode, através de uma aplicação, escrever em um arquivo XML, e um
                            outro banco distinto pode ler então estes mesmos dados.
                </parágrafo>
                <parágrafo>
                            Para validar os documentos XML foi utilizada a linguagem XML Schema. XML Schema é uma linguagem
                            baseada no formato XML para definição de regras de validação ("esquemas") em documentos no formato XML.
                            Foi a primeira linguagem de esquema para XML a obter o status de recomendação por parte do W3C.
                            Esta linguagem é uma alternativa ao DTD, cuja sintaxe não é baseada no formato XML. Um arquivo
                            contendo as definições na linguagem XML Schema é chamado de XSD (XML Schema Definition), este
                            descreve a estrutura de um documento XML.[2]
                </parágrafo>        
                <parágrafo> Neste trabalho encontra-se este tipo de ficheiros em Relatorio.xsd ou Seguradora.xsd.</parágrafo>
                <parágrafo> Existem mais ficheiros xsd para os tipos complexos e simples.</parágrafo>
                <parágrafo> Um exemplo para um tipo complexo é o TBarco. É um tipo que contém outros atributos e elementos para o definir.</parágrafo>
                <parágrafo>
                            É natural que certos atributos ou elementos estejam como por exemplo o xs:string (tipo string) 
                            definido pelo http://www.w3.org/2001/XMLSchema (v=1.0)
                </parágrafo>
            </linguagem>
            <transformações id="ANX444" tituloSecção="Transformações">
                <parágrafo> Para poder transformar o documento XML foi utilizada ainda outra linguagem, o XSL Transformations,
                            ou XSLT (eXtensible Stylesheet Language for Transformation - uma linguagem extensível para folhas de
                            estilo de transformações), é uma linguagem de marcação XML usada para criar documentos XSL que, por 
                            sua vez, definem a apresentação dos documentos XML nos browsers e outros aplicativos que a suportem.
                            É importante observar que o documento XSL não altera o documento XML original, ou seja, não cria outro 
                            documento. Neste sentido, o documento XSLT atua como as folhas de estilos CSS: apenas determina como o
                            browser apresenta o documento XML ao qual ele está associado ou anexado (de uma forma bem parecida à
                            usada para associar uma folha de estilos CSS a um documento (X)HTML).[3]
                            O browser recebe o documento XML original, na íntegra, como ele foi criado. E apresenta-o como o
                            documento XSL determina.  Mas há uma diferença importante entre XSLT e CSS: o documento XSL pode 
                            adicionar conteúdo à apresentação do documento XML no browser, e também pode esconder conteúdo do XML
                            apresentado no browser.
                            Portanto, XSLT possibilita transformações mais potentes do que as folhas de estilo CSS.
                </parágrafo>
                <parágrafo> 
                            As transformações foi utilizado a versão 1.0 XSLT ( http://www.w3.org/1999/XSL/Transform ) e a versão
                            2.0 XSLT.
                </parágrafo>
                <parágrafo> 
                            Foi utilizado xsl:value-of para obter dados do element, for-each para manipular listas de elementos, 
                            attributes para definir atributos nas tags HTML.
                </parágrafo>
                <parágrafo> 
                            No que toca aa seleções (select="path/to/selectedlement") foi usado no presente relatório XPath, 
                            para selecionar nodes pelo rootnode/path/to/node.
                </parágrafo>
                <parágrafo> Para a seguradora (xml2html) foi usado XPath // para selecionar o primeiro node que dêm math.</parágrafo>
                <parágrafo> 
                            De forma a implentar funções lógicas como, por exemplo, atenuar ou agravar o seguro a um cliente optámos
                            por aplicar a seguintes regras na transformação do documento XML da Seguradora no documento HTML da Seguradora:
                </parágrafo>
                <parágrafo>
                                -> classificar um cliente com base no número de ocorrências declaradas:</parágrafo>
            <parágrafo>
                                        ->  "CLIENTE BOM", se forem detectadas 0 ocorrências;</parágrafo>
            <parágrafo>
                                        ->  "CLIENTE DUVIDOSO", se for detectada 1 ocorrência;</parágrafo>
            <parágrafo>
                                        ->  "CLIENTE DE RISCO", se forem detectadas 2 ou mais ocorrências.</parágrafo>
            <parágrafo>
                </parágrafo>
                <parágrafo> Nas restantes transformações lógicas foram usadas essencialmente somatórios como, por exemplo, na transformação 
                            do documento XML da Seguradora no documento TXT da Seguradora de forma a quantificar o numeros de ocorrências
                            para cada cliente.
                </parágrafo>
                
            </transformações>
        </outrasSecções>

        <conclusão id="ANX555" tituloSecção="Conclusão">
            <parágrafo> Relativamente aos objectivos propostos consideramos ter cumprido todos os requisitos. Uma vez que a definição  
                        das regras do negócio ficaram a nosso cargo sabíamos de antemão que a complexidade alcançada iria variar consoante os
                        resultados que irámos obtendo. Como o nosso principal foco foi utilizar de forma abrangente todas estas linguagens
                        sabemos que o negócio poderia ter sido alvo de maior atenção da nossa parte, mas mesmo assim consideramos que este
                        foi um óptimo desafio ao qual respondemos com sucesso. 
            </parágrafo>
        </conclusão>

        <referências id="ANX666" tituloSecção="Referências">
            <refBibliográfica idRef="RefB_01">
                <título>XML definição</título>
                <dataPublicação>2019-01-01</dataPublicação>
                <autor>Wikipédia</autor>
            </refBibliográfica>
            <refBibliográfica idRef="RefB_02">
                <título>XSD definição</título>
                <dataPublicação>2019-01-01</dataPublicação>
                <autor>Wikipédia</autor>
            </refBibliográfica>
            <refBibliográfica idRef="RefB_03">
                <título>XSL definição</título>
                <dataPublicação>2019-01-01</dataPublicação>
                <autor>Wikipédia</autor>
            </refBibliográfica>
        </referências>

    </corpo>

    <anexos id="ANX777" tituloSecção="Anexos">
        <parágrafo>Sem anexos</parágrafo>
    </anexos>

</relatório>